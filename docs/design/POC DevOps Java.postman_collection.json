{
	"info": {
		"_postman_id": "cbc23ad6-41e8-4b43-8a3a-7f3a664fb50d",
		"name": "POC DevOps Java",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Validations",
			"item": [
				{
					"name": "[LOC] /scientist/ | KO missing name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is \"+responseCode.code] = responseCode.code === 400;\r",
									"pm.test(\"The response has all properties\", () => {\r",
									"    //parse the response JSON and test three properties\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.errors[0].field).to.eql('name');\r",
									"    pm.expect(responseJson.errors[0].errorCode).to.eql('000.001');\r",
									"    pm.expect(responseJson.errors[0].errorMessage).to.eql('Invalid input: the field [name] must not be blank');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"points\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{addressLoc}}/scientist/",
							"protocol": "http",
							"host": [
								"{{addressLoc}}"
							],
							"path": [
								"scientist",
								""
							]
						}
					},
					"response": [
						{
							"name": "[LOC] /scientist/ | KO missing name",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"points\": 1\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{addressLoc}}/scientist/",
									"protocol": "http",
									"host": [
										"{{addressLoc}}"
									],
									"path": [
										"scientist",
										""
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 10 Feb 2022 09:20:37 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": [\n        {\n            \"field\": \"name\",\n            \"errorCode\": \"000.001\",\n            \"errorMessage\": \"Invalid input: the field [name] must not be blank\"\n        }\n    ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "OpenAPI",
			"item": [
				{
					"name": "[LOC] Open API documentation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is \"+responseCode.code] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{addressLoc}}/api-docs",
							"protocol": "http",
							"host": [
								"{{addressLoc}}"
							],
							"path": [
								"api-docs"
							]
						}
					},
					"response": []
				},
				{
					"name": "[LOC] Open API documentation YAML",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is \"+responseCode.code] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{addressLoc}}/api-docs.yaml",
							"protocol": "http",
							"host": [
								"{{addressLoc}}"
							],
							"path": [
								"api-docs.yaml"
							]
						}
					},
					"response": []
				},
				{
					"name": "[LOC] /swagger-ui.html |  Open API documentation Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is \"+responseCode.code] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{addressLoc}}/swagger-ui.html",
							"protocol": "http",
							"host": [
								"{{addressLoc}}"
							],
							"path": [
								"swagger-ui.html"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "[RANCHER] /actuator",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is \"+responseCode.code] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://192.168.125.244:30038/actuator",
					"protocol": "http",
					"host": [
						"192",
						"168",
						"125",
						"244"
					],
					"port": "30038",
					"path": [
						"actuator"
					]
				}
			},
			"response": [
				{
					"name": "[RANCHER] /actuator",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://192.168.125.244:30038/actuator",
							"protocol": "http",
							"host": [
								"192",
								"168",
								"125",
								"244"
							],
							"port": "30038",
							"path": [
								"actuator"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/vnd.spring-boot.actuator.v3+json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Wed, 09 Feb 2022 12:18:08 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"_links\": {\n        \"self\": {\n            \"href\": \"http://192.168.125.244:30038/actuator\",\n            \"templated\": false\n        },\n        \"health\": {\n            \"href\": \"http://192.168.125.244:30038/actuator/health\",\n            \"templated\": false\n        },\n        \"health-path\": {\n            \"href\": \"http://192.168.125.244:30038/actuator/health/{*path}\",\n            \"templated\": true\n        }\n    }\n}"
				}
			]
		},
		{
			"name": "[LOC] /actuator",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is \"+responseCode.code] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{addressLoc}}/actuator",
					"protocol": "http",
					"host": [
						"{{addressLoc}}"
					],
					"path": [
						"actuator"
					]
				}
			},
			"response": [
				{
					"name": "[LOC] /actuator",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{addressLoc}}/actuator",
							"protocol": "http",
							"host": [
								"{{addressLoc}}"
							],
							"path": [
								"actuator"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/vnd.spring-boot.actuator.v3+json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Thu, 03 Feb 2022 11:43:21 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"_links\": {\n        \"self\": {\n            \"href\": \"http://localhost:8080/actuator\",\n            \"templated\": false\n        },\n        \"health\": {\n            \"href\": \"http://localhost:8080/actuator/health\",\n            \"templated\": false\n        },\n        \"health-path\": {\n            \"href\": \"http://localhost:8080/actuator/health/{*path}\",\n            \"templated\": true\n        }\n    }\n}"
				}
			]
		},
		{
			"name": "[LOC] /actuator/health",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is \"+responseCode.code] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{addressLoc}}/actuator/health",
					"protocol": "http",
					"host": [
						"{{addressLoc}}"
					],
					"path": [
						"actuator",
						"health"
					]
				}
			},
			"response": [
				{
					"name": "[LOC] /actuator/health",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{addressLoc}}/actuator/health",
							"protocol": "http",
							"host": [
								"{{addressLoc}}"
							],
							"path": [
								"actuator",
								"health"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/vnd.spring-boot.actuator.v3+json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Thu, 03 Feb 2022 11:44:36 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": \"UP\"\n}"
				}
			]
		},
		{
			"name": "[LOC] /scientist/",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is \"+responseCode.code] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{addressLoc}}/scientist/",
					"protocol": "http",
					"host": [
						"{{addressLoc}}"
					],
					"path": [
						"scientist",
						""
					]
				}
			},
			"response": [
				{
					"name": "[LOC] /scientist/",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{addressLoc}}/scientist/",
							"protocol": "http",
							"host": [
								"{{addressLoc}}"
							],
							"path": [
								"scientist",
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Thu, 10 Feb 2022 09:21:03 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"scientists\": [\n        {\n            \"uuid\": \"d84c2a00-1047-4dfb-9494-ea3646b614e6\",\n            \"name\": \"Marie Salomea Skłodowska Curie\",\n            \"numberOfNobels\": 2,\n            \"creationDate\": \"2022-02-10T09:18:03.904+00:00\",\n            \"updateDate\": null\n        },\n        {\n            \"uuid\": \"03daaa33-2f15-4284-ae97-b6b3f7355daf\",\n            \"name\": \"Irène Joliot-Curie\",\n            \"numberOfNobels\": 1,\n            \"creationDate\": \"2022-02-10T09:18:03.904+00:00\",\n            \"updateDate\": null\n        },\n        {\n            \"uuid\": \"a38b9605-bbf4-42d5-a48d-1ccfdb83b27d\",\n            \"name\": \"Paul Langevin\",\n            \"numberOfNobels\": 0,\n            \"creationDate\": \"2022-02-10T09:18:03.904+00:00\",\n            \"updateDate\": null\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "[LOC] /scientist/",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is \"+responseCode.code] = responseCode.code === 201;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Enrico Fermi\",\r\n    \"points\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{addressLoc}}/scientist/",
					"protocol": "http",
					"host": [
						"{{addressLoc}}"
					],
					"path": [
						"scientist",
						""
					]
				}
			},
			"response": [
				{
					"name": "[LOC] /scientist/",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Enrico Fermi\",\r\n    \"points\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{addressLoc}}/scientist/",
							"protocol": "http",
							"host": [
								"{{addressLoc}}"
							],
							"path": [
								"scientist",
								""
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Thu, 10 Feb 2022 09:21:17 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"scientists\": [\n        {\n            \"uuid\": \"c9562bfc-c82d-4ca7-acec-3e81555a45c2\",\n            \"name\": \"Enrico Fermi\",\n            \"numberOfNobels\": 0,\n            \"creationDate\": \"2022-02-10T09:21:17.585+00:00\",\n            \"updateDate\": null\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "[LOC] /scientist/{name}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is \"+responseCode.code] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{addressLoc}}/scientist/:name",
					"protocol": "http",
					"host": [
						"{{addressLoc}}"
					],
					"path": [
						"scientist",
						":name"
					],
					"variable": [
						{
							"key": "name",
							"value": "Marie Salomea Skłodowska Curie"
						}
					]
				}
			},
			"response": [
				{
					"name": "[LOC] /scientist/{name}",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{addressLoc}}/scientist/:name",
							"protocol": "http",
							"host": [
								"{{addressLoc}}"
							],
							"path": [
								"scientist",
								":name"
							],
							"variable": [
								{
									"key": "name",
									"value": "Marie Salomea Skłodowska Curie"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Thu, 10 Feb 2022 09:21:24 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"scientists\": [\n        {\n            \"uuid\": \"d84c2a00-1047-4dfb-9494-ea3646b614e6\",\n            \"name\": \"Marie Salomea Skłodowska Curie\",\n            \"numberOfNobels\": 2,\n            \"creationDate\": \"2022-02-10T09:18:03.904+00:00\",\n            \"updateDate\": null\n        }\n    ]\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Ambiente",
					"pm.environment.set(\"addressLoc\",\"localhost:8080\");"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}